# Version format
version: "{build}"

# Operating system (build VM template)
os: Windows Server 2012 R2

# Environment variables
environment:
  GOROOT: c:\go
  GOPATH: c:\gopath
  PROJ:   github.com\elastic\filebeat

# Custom clone folder (variables are not expanded here).
clone_folder: c:\gopath\src\github.com\elastic\filebeat

# Scripts that run after cloning repository
install:
  - set PATH=%GOROOT%\bin;%PATH%
  - set PATH=%GOPATH%\bin;%PATH%
  - set GOPATH=%GOPATH%\src\%PROJ%\Godeps\_workspace;%GOPATH%
  - go version
  - go env
  - python --version
  - appveyor DownloadFile https://raw.githubusercontent.com/pypa/pip/master/contrib/get-pip.py
  - python get-pip.py
  - set PATH=C:\Python27\Scripts;%PATH%
  - pip install jinja2 nose nose-timer

# To run your custom scripts instead of automatic MSBuild
build_script:
  # Compile
  - appveyor AddCompilationMessage "Starting Compile"
  - go build
  - appveyor AddCompilationMessage "Compile Success" -FileName "filebeat.exe"

# To run your custom scripts instead of automatic tests
test_script:
  # Unit tests
  - ps: Add-AppveyorTest "Unit Tests" -Outcome Running
  - go test ./...
  - ps: Update-AppveyorTest "Unit Tests" -Outcome Passed
  # System tests
  - ps: Add-AppveyorTest "System tests" -Outcome Running
  - go test -race -c -cover -covermode=atomic -coverpkg ./...
  - ps: cd tests/system
  - nosetests --with-timer
  - ps: Update-AppveyorTest "System tests" -Outcome Passed

# After testing, cross-compile and publish artifacts.
after_test:
  - ps: cd c:\gopath\src\github.com\elastic\filebeat
  - appveyor AddCompilationMessage "Starting cross-compile"
  - set GOOS=linux
  - set GOARCH=386
  - set GOARM=
  - set GO386=
  - go build -o bin/filebeat-linux-386
  - ps: Push-AppveyorArtifact bin/filebeat-linux-386
  - set GOOS=linux
  - set GOARCH=386
  - set GOARM=
  - set GO386=387
  - go build -o bin/filebeat-linux-386-387
  - ps: Push-AppveyorArtifact bin/filebeat-linux-386-387
  - set GOOS=linux
  - set GOARCH=arm
  - set GOARM=5
  - set GO386=
  - go build -o bin/filebeat-linux-arm-arm5
  - ps: Push-AppveyorArtifact bin/filebeat-linux-arm-arm5
  - set GOOS=linux
  - set GOARCH=amd64
  - set GOARM=
  - set GO386=
  - go build -o bin/filebeat-linux-amd64
  - ps: Push-AppveyorArtifact bin/filebeat-linux-amd64
  - set GOOS=linux
  - set GOARCH=arm
  - set GOARM=
  - set GO386=
  - go build -o bin/filebeat-linux-arm
  - ps: Push-AppveyorArtifact bin/filebeat-linux-arm
  - set GOOS=linux
  - set GOARCH=arm64
  - set GOARM=
  - set GO386=
  - go build -o bin/filebeat-linux-arm64
  - ps: Push-AppveyorArtifact bin/filebeat-linux-arm64
  - set GOOS=linux
  - set GOARCH=ppc64
  - set GOARM=
  - set GO386=
  - go build -o bin/filebeat-linux-ppc64
  - ps: Push-AppveyorArtifact bin/filebeat-linux-ppc64
  - set GOOS=linux
  - set GOARCH=ppc64le
  - set GOARM=
  - set GO386=
  - go build -o bin/filebeat-linux-ppc64le
  - ps: Push-AppveyorArtifact bin/filebeat-linux-ppc64le
  - set GOOS=darwin
  - set GOARCH=386
  - set GOARM=
  - set GO386=
  - go build -o bin/filebeat-darwin-386
  - ps: Push-AppveyorArtifact bin/filebeat-darwin-386
  - set GOOS=darwin
  - set GOARCH=amd64
  - set GOARM=
  - set GO386=
  - go build -o bin/filebeat-darwin-amd64
  - ps: Push-AppveyorArtifact bin/filebeat-darwin-amd64
  - set GOOS=dragonfly
  - set GOARCH=amd64
  - set GOARM=
  - set GO386=
  - go build -o bin/filebeat-dragonfly-amd64
  - ps: Push-AppveyorArtifact bin/filebeat-dragonfly-amd64
  - set GOOS=freebsd
  - set GOARCH=386
  - set GOARM=
  - set GO386=
  - go build -o bin/filebeat-freebsd-386
  - ps: Push-AppveyorArtifact bin/filebeat-freebsd-386
  - set GOOS=freebsd
  - set GOARCH=amd64
  - set GOARM=
  - set GO386=
  - go build -o bin/filebeat-freebsd-amd64
  - ps: Push-AppveyorArtifact bin/filebeat-freebsd-amd64
  - set GOOS=freebsd
  - set GOARCH=arm
  - set GOARM=
  - set GO386=
  - go build -o bin/filebeat-freebsd-arm
  - ps: Push-AppveyorArtifact bin/filebeat-freebsd-arm
  - set GOOS=netbsd
  - set GOARCH=386
  - set GOARM=
  - set GO386=
  - go build -o bin/filebeat-netbsd-386
  - ps: Push-AppveyorArtifact bin/filebeat-netbsd-386
  - set GOOS=netbsd
  - set GOARCH=amd64
  - set GOARM=
  - set GO386=
  - go build -o bin/filebeat-netbsd-amd64
  - ps: Push-AppveyorArtifact bin/filebeat-netbsd-amd64
  - set GOOS=netbsd
  - set GOARCH=arm
  - set GOARM=
  - set GO386=
  - go build -o bin/filebeat-netbsd-arm
  - ps: Push-AppveyorArtifact bin/filebeat-netbsd-arm
  - set GOOS=openbsd
  - set GOARCH=386
  - set GOARM=
  - set GO386=
  - go build -o bin/filebeat-openbsd-386
  - ps: Push-AppveyorArtifact bin/filebeat-openbsd-386
  - set GOOS=openbsd
  - set GOARCH=amd64
  - set GOARM=
  - set GO386=
  - go build -o bin/filebeat-openbsd-amd64
  - ps: Push-AppveyorArtifact bin/filebeat-openbsd-amd64
  - set GOOS=openbsd
  - set GOARCH=arm
  - set GOARM=
  - set GO386=
  - go build -o bin/filebeat-openbsd-arm
  - ps: Push-AppveyorArtifact bin/filebeat-openbsd-arm
  - set GOOS=solaris
  - set GOARCH=amd64
  - set GOARM=
  - set GO386=
  - go build -o bin/filebeat-solaris-amd64
  - ps: Push-AppveyorArtifact bin/filebeat-solaris-amd64
  - set GOOS=windows
  - set GOARCH=386
  - set GOARM=
  - set GO386=
  - go build -o bin/filebeat-windows-386.exe
  - ps: Push-AppveyorArtifact bin/filebeat-windows-386.exe
  - set GOOS=windows
  - set GOARCH=amd64
  - set GOARM=
  - set GO386=
  - go build -o bin/filebeat-windows-amd64.exe
  - ps: Push-AppveyorArtifact bin/filebeat-windows-amd64.exe
  - appveyor AddCompilationMessage "Cross-compile success"

# To disable deployment
deploy: off

# Notifications should only be setup using the AppVeyor UI so that
# forks can be created without inheriting the settings.
